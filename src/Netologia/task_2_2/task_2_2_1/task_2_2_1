Домашнее задание по лекции 2.2. Основы ООП - модификаторы доступа, наследование
Задача 1. Иерархия “Статусы книг”
Описание
Рассмотрим предметную область обычной библиотеки. У каждой книги есть один из следующих статусов: взято в пользование
(BORROWED), доступно (AVAILABLE), задержана (OVERDUED), в архиве (ARCHIVED).

Из одного статуса доступно только ограниченное число статусов. Диаграмма переходов указана здесь:
https://drive.google.com/file/d/1a8qZt2Dmab--Un071pSvY81laB2CzySv/view?usp=sharing

Необходимо с помощью наследования реализовать программу, в которой будет 4 наследника базового класса BookMover по
переводу статуса книги из одного в другой. Данный функционал пригодится в случае массового перевода книг в какой-то
статус, но мы пока рассмотрим перевод только одной книги.

Также необходимо будет описать класс Book с базовым набором полей title и status.

Процесс реализации
Создайте Enum класс StatusEnum с 4 возможными статусами в нашей программе.
Создайте класс BookMover с реализацией метода moveToStatus.
protected void moveToStatus(Book book, StatusEnum requestedStatus) {
    System.out.println("Moving status...");
}
Создайте 4 наследника данного класса. Например: FromArchievedStatusMover - класс в котором будет проверка и переход
книги в запрашиваемый статус, если он возможен. Если он невозможен, то будет выброшен IllegalStateException. Проверку
доступности необходимо сделать, используя Enum, созданный на первом шаге, оператор switch и диаграмму переходов.
В классе Main.java необходимо будет создать объект класса Book, используя конструктор. Убедитесь, что функции перехода
были реализованы верно и статус у книги корректный. Например:
   Book book = new Book("The Lord of the Rings");
   BookMover fromAvailableStatusMover = new FromAvailableStatusMover();
   fromAvailableStatusMover.moveToStatus(book, StatusEnum.AVAILABLE);
   System.out.println(book.getStatus());